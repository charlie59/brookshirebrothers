<?php

/**
 * @file
 * Custom functions and hooks for Brookshire Brothers
 *
 */

/**
 * Implements hook_menu().
 */
function brookshirebrotherscustom_menu() {

  $items = array();

  $items['admin/store-updater'] = array(
    'title' => 'Store Updater',
    'page callback' => 'brookshirebrotherscustom_store_updater',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access administration pages'),
    'file' => 'includes/store_updater.inc'
  );

  $items['admin/describe'] = array(
    'title' => 'Describe Account Object',
    'page callback' => 'brookshirebrotherscustom_describe',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access administration pages'),
  );

  return $items;
}

/**
 * Cron Jobs
 * @param $op
 * @param null $job
 * @return mixed
 */
function brookshirebrotherscustom_cronapi($op, $job = NULL) {

  /*
   * Update Store Location nodes from Salesforce
   */
  $items['brookshirebrotherscustom_store_updater_cron'] = array(
    'description' => 'Update Store Locations',
    'rule' => '0 2 * * *',
    'callback' => 'brookshirebrotherscustom_store_updater',
    'file' => 'includes/store_updater.inc'
  );
  return $items;

}

/**
 * @param $node
 * @param $form
 * @param $form_state
 *
 */
function brookshirebrotherscustom_node_submit($node, $form, &$form_state) {
  if (isset($node->field_facebook_image['und'][0]['fid'])) {
    $file = file_load($node->field_facebook_image['und'][0]['fid']);
    $uri = $file->uri;
    $url = file_create_url($uri);
    $node->metatags['und']['og:image']['value'] = $url;
  }
}


/**
 * Describe Account Object
 * To get Salesforce fields names
 */
function brookshirebrotherscustom_describe() {

  require_once (SOAP_CLIENT_BASEDIR.'/SforcePartnerClient.php');
  require_once (SOAP_CLIENT_BASEDIR.'/SforceHeaderOptions.php');
  require_once (SOAP_CLIENT_BASEDIR.'/SforceBaseClient.php');

  try {
    $mySforceConnection = new SforcePartnerClient();
    $mySoapClient = $mySforceConnection->createConnection(SOAP_CLIENT_BASEDIR.'/partner.wsdl.xml');
    $mylogin = $mySforceConnection->login(SOAP_CLIENT_USER, SOAP_CLIENT_PASSWORD);
    $response = $mySforceConnection->describeSObject("Account");
    print_r($response);
  } catch (Exception $e) {
    echo $mySforceConnection->getLastRequest();
    echo $e->faultstring;
  }
}


/**
 * Implements hook_user_login()
 * @param $edit
 * @param $account
 * Set cookie by role for caching/proxy serving
 */
function brookshirebrotherscustom_user_login(&$edit, $account) {
  function in_array_any($needles, $haystack) {
    return (bool)(array_intersect($needles, $haystack));
  }
  $check = in_array_any(['administrator', 'marketing'], $account->roles);
  if ($check == 1) {
    setcookie('nocache', '1', 0, '/');
  } else {
    $check = in_array_any(['authenticated user'], $account->roles);
    if ($check == 1) {
      setcookie('nocache', '2', 0, '/');
    }
  }
}


/**
 * Implements hook_user_logout().
 * Remove nocache cookie
 */
function brookshirebrotherscustom_user_logout($account) {
  // Set cookie in the past and then remove it.
  setcookie('nocache', '', REQUEST_TIME - 3600, '/');
  unset($_COOKIE['nocache']);
}